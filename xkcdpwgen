#!/usr/bin/python3
import argparse
import random

wordFile = open('words.txt', 'r')
wordContent = wordFile.readlines()
symbolChar = ['~', '!', '@', '#', '$', '%', '^', '&', '*', '.', ':', ';']

parser = argparse.ArgumentParser(
    prog='xkcdpwgen',
    description='Generate a secure, memorable password using the XKCD method')
parser.add_argument('-w', '--words', dest='WORDS', type=int, default=4,
                    help='include WORDS words in the password (default=4)')
parser.add_argument('-c', '--caps', dest='CAPS', type=int, default=0,
                    help='capitalize the first letter of CAPS random words (default=0)')
parser.add_argument('-n', '--numbers', dest='NUMBERS', type=int, default=0,
                    help='insert NUMBERS random numbers in the password (default=0)')
parser.add_argument('-s', '--symbols', dest='SYMBOLS', type=int, default=0,
                    help='insert SYMBOLS random symbols in the password (default=0)')

args = parser.parse_args()

def insert(chosenWords, loop, argType):
    if(argType == "c"):
        for x in range(loop):
            randPos = random.randint(0, len(chosenWords)-1)
            chosenWords[randPos] = chosenWords[randPos].capitalize()
    elif(argType == "n"):
        for x in range(loop):
            randPos = random.randint(0, len(chosenWords)-1)
            if(randPos != len(chosenWords)-1):
                chosenWords[randPos] = str(random.randint(0, 9)) + chosenWords[randPos]
            else:
                chosenWords[randPos] = chosenWords[randPos] + str(random.randint(0, 9))
    elif(argType == "s"):
        for x in range(loop):
            randPos = random.randint(0, len(chosenWords)-1)
            randSym = random.randint(0, len(symbolChar)-1)
            if(randPos != len(chosenWords)-1):
                chosenWords[randPos] = symbolChar[randSym] + chosenWords[randPos]
            else:
                chosenWords[randPos] = chosenWords[randPos] + symbolChar[randSym]
    else:
        raise Exception("No such argType exists")
                

def generatePass():
    newPass = ""
    chosenWords = []
    for num in range(args.WORDS):
        randNum = random.randint(0, len(wordContent)-1)
        if wordContent[randNum][-1] == '\n':
            chosenWords.append(wordContent[randNum][:-1])
        else:
            chosenWords.append(wordContent[randNum])
    insert(chosenWords, args.CAPS, "c")
    insert(chosenWords, args.NUMBERS, "n")
    insert(chosenWords, args.SYMBOLS, "s")
    for word in chosenWords:
        newPass = newPass + word
    return newPass

print(generatePass())
